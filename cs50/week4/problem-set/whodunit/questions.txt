1.  What’s stdint.h?

Just judging by the name, stdint is a header file containing commonly used or "standard" (std)
typedefs with specific integer "widths."

2.  What’s the point of using uint8_t, uint32_t, int32_t, and uint16_t in a program?

You understand the specific size and memory that a piece of data uses and designate rather it
uses a signed bit or not. This is very useful if you're working with an embedded system or are
emulating one. In this case, width corresponds to the number of bits a particular piece of
data takes up.

3.  How many bytes is a BYTE, a DWORD, a LONG, and a WORD, respectively?

A byte is one byte, a word is two bytes, dword and long are both four bytes, but a long has a 
sign byte whereas a dword does not. 

4.  What (in ASCII, decimal, or hexadecimal) must the first two bytes of any BMP file be? 
Leading bytes used to identify file formats (with high probability) are generally called "magic 
numbers."

"BM" is ASSCI, or 0x42 0x4D in hexadecimal.

5.  What’s the difference between bfSize and biSize?



6.  What does it mean if biHeight is negative?



7.  What field in BITMAPINFOHEADER specifies the BMP’s color depth (i.e., bits per pixel)?



8.  Why might fopen return NULL in lines 24 and 32 of copy.c?



9.  Why is the third argument to fread always 1 in our code?



10. What value does line 65 of copy.c assign to padding if bi.biWidth is 3?



11. What does fseek do?



12. What is SEEK_CUR?



